{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///waver.js","webpack:///webpack/bootstrap 7aab525712c2ee639f82","webpack:///./src/index.js","webpack:///./src/parser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","mapOutputType","type","AudioDestinationNode","MediaStreamAudioDestinationNode","mapInputType","AudioBufferSourceNode","ConstantSourceNode","MediaElementAudioSourceNode","MediaStreamAudioSourceNode","createNode","context","_type","_slicedToArray","param","result","createBiquadFilter","createDelay","createDynamicsCompressor","createGain","gain","createOscillator","createStereoPanner","pan","createAudioContext","audioContext","createWaver","_len","arguments","args","_key","Function","bind","apply","Waver","concat","parser","undefined","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","_parser","_parser2","default","window","AudioContext","webkitAudioContext","source","Error","compiled","parse","_context","_outputTypes","Map","_inputTypes","_paramTypes","_output","_input","_node","_param","_chain","_setup","_enabled","_request","outputTypes","set","inputTypes","nodeTypes","node","paramTypes","_compiled$paramTypes$","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","chains","item","to","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setup","_valid","keys","cancelAnimationFrame","_process","enabled","_disconnect","id","has","_connect","_this","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_findNode","v","_getValue","requestAnimationFrame","params","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_step4$value","k","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","connect","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","disconnect","e","peg$SyntaxError","message","expected","found","location","captureStackTrace","peg$parse","input","options","text","substring","peg$savedPos","peg$currPos","peg$literalExpectation","ignoreCase","peg$classExpectation","parts","inverted","peg$otherExpectation","description","peg$computePosDetails","pos","details","peg$posDetailsCache","line","column","charCodeAt","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","peg$buildStructuredError","buildMessage","peg$decode","bc","peg$parseRule","index","peg$bytecode","ip","ips","ends","stack","peg$consts","peg$FAILED","pop","splice","substr","toLowerCase","test","charAt","peg$silentFails","slice","parseChain","map","evalLambda","body","peg$result","peg$startRuleIndices","Program","peg$startRuleIndex","parseFloat","contents","trim","startRule","child","parent","ctor","hex","ch","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","DESCRIBE_EXPECTATION_FNS","literal","class","escapedParts","any","other","j","descriptions","sort","join","SyntaxError"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,GAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAf,EAAAgB,EAAAC,GACAX,EAAAY,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAK,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,GAGAxB,IAAAyB,EAAA,KDgBM,SAAU9B,EAAQD,EAASM,GAEjC,YAuBA,SAAS0B,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIxB,GAAI,EAAG2B,EAAOF,MAAMD,EAAII,QAAS5B,EAAIwB,EAAII,OAAQ5B,IAAO2B,EAAK3B,GAAKwB,EAAIxB,EAAM,OAAO2B,GAAe,MAAOF,OAAMI,KAAKL,GAE1L,QAASM,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCEnGhH,QAASC,GAAcC,GACrB,MAAa,gBAATA,EACKC,qBACW,WAATD,EACFE,gCAGF,KAGT,QAASC,GAAaH,GACpB,MAAa,WAATA,EACKI,sBACW,aAATJ,EACFK,mBACW,UAATL,EACFM,4BACW,WAATN,EACFO,2BAGF,KAGT,QAASC,GAAWC,EAAST,GAAM,GAAAU,GAAAC,EACTX,EADS,GACzB5B,EADyBsC,EAAA,GACnBE,EADmBF,EAAA,EAGjC,IAAa,iBAATtC,EAAyB,CAC3B,GAAMyC,GAASJ,EAAQK,oBAIvB,OAHc,QAAVF,IACFC,EAAOb,KAAOY,GAETC,EACF,GAAa,UAATzC,EACT,MAAOqC,GAAQM,YAAYH,EACtB,IAAa,eAATxC,EACT,MAAOqC,GAAQO,0BACV,IAAa,SAAT5C,EAAiB,CAC1B,GAAMyC,GAASJ,EAAQQ,YAIvB,OAHc,QAAVL,IACFC,EAAOK,KAAKhD,MAAQ0C,GAEfC,EACF,GAAa,eAATzC,EAAuB,CAChC,GAAMyC,GAASJ,EAAQU,kBAIvB,OAHc,QAAVP,IACFC,EAAOb,KAAOY,GAETC,EACF,GAAa,QAATzC,EAAgB,CACzB,GAAMyC,GAASJ,EAAQW,oBAIvB,OAHc,QAAVR,IACFC,EAAOQ,IAAInD,MAAQ0C,GAEdC,EAGT,MAAO,MAGF,QAASS,KACd,MAAO,IAAIC,GAGN,QAASC,KAAqB,OAAAC,GAAAC,UAAAjC,OAANkC,EAAMrC,MAAAmC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAND,EAAMC,GAAAF,UAAAE,EACnC,YAAAC,SAAA7C,UAAA8C,KAAAC,MAAWC,GAAX,MAAAC,OAAoBN,KFYtBpD,OAAOC,eAAepB,EAAS,cAC7Bc,OAAO,IAETd,EAAQ8E,WAASC,EAEjB,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOrD,UAAY,eAAkBuD,IAElQE,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI/E,GAAI,EAAGA,EAAI+E,EAAMnD,OAAQ5B,IAAK,CAAE,GAAIgF,GAAaD,EAAM/E,EAAIgF,GAAWnE,WAAamE,EAAWnE,aAAc,EAAOmE,EAAWpE,cAAe,EAAU,SAAWoE,KAAYA,EAAWC,UAAW,GAAMvE,OAAOC,eAAemE,EAAQE,EAAWE,IAAKF,IAAiB,MAAO,UAAUhD,EAAamD,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiB7C,EAAYb,UAAWgE,GAAiBC,GAAaP,EAAiB7C,EAAaoD,GAAqBpD,MAE5hBc,EAAiB,WAAc,QAASuC,GAAc7D,EAAKxB,GAAK,GAAIsF,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKnB,EAAW,KAAM,IAAK,GAAiCoB,GAA7BC,EAAKnE,EAAIgD,OAAOC,cAAmBc,GAAMG,EAAKC,EAAGC,QAAQC,QAAoBP,EAAKQ,KAAKJ,EAAGrF,QAAYL,GAAKsF,EAAK1D,SAAW5B,GAA3DuF,GAAK,IAAoE,MAAOQ,GAAOP,GAAK,EAAMC,EAAKM,EAAO,QAAU,KAAWR,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAU9D,EAAKxB,GAAK,GAAIyB,MAAMC,QAAQF,GAAQ,MAAOA,EAAY,IAAIgD,OAAOC,WAAY/D,QAAOc,GAAQ,MAAO6D,GAAc7D,EAAKxB,EAAa,MAAM,IAAIiC,WAAU,2DAEtlB1C,GE5BgBkE,qBF6BhBlE,EEzBgBoE,aAxEhB,IAAAqC,GAAAnG,EAAA,GFqGIoG,EAEJ,SAAgCvB,GAAO,MAAOA,IAAOA,EAAI1D,WAAa0D,GAAQwB,QAASxB,IAFjDsB,EAQtCzG,GE1GE8E,OF0Ge4B,EAASC,OEvG1B,IAAMxC,GAAeyC,OAAOC,cAAgBD,OAAOE,mBAsE9BlC,EFgHT,WEvEV,QAAAA,GAAYvB,EAAS0D,GACnB,GAD2BxE,EAAAnC,KAAAwE,KACrBvB,YAAmBc,IACvB,KAAM,IAAI6C,OAAM,yCAElB,IAAsB,gBAAXD,GACT,KAAM,IAAIC,OAAM,kCAGlB,IAAMC,GAAWP,EAAAC,QAAOO,MAAMH,EAE9B3G,MAAK+G,SAAW9D,EAChBjD,KAAKgH,aAAe,GAAIC,KACxBjH,KAAKkH,YAAc,GAAID,KACvBjH,KAAKmH,YAAc,GAAIF,KACvBjH,KAAKoH,QAAU,GAAIH,KACnBjH,KAAKqH,OAAS,GAAIJ,KAClBjH,KAAKsH,MAAQ,GAAIL,KACjBjH,KAAKuH,OAAS,GAAIN,KAClBjH,KAAKwH,UACLxH,KAAKyH,UACLzH,KAAK0H,UAAW,EAChB1H,KAAK2H,SAAW,CAEhB,KAAK,GAAMpC,KAAOsB,GAASe,YAAa,CACtC,GAAMhH,GAAOiG,EAASe,YAAYrC,GAC5B/C,EAAOD,EAAc3B,EAC3B,KAAK4B,EACH,KAAM,IAAIoE,OAAJ,4BAAsChG,EAG9CZ,MAAKgH,aAAaa,IAAItC,EAAK/C,GAC3BxC,KAAKoH,QAAQS,IAAItC,EAAK,MAGxB,IAAK,GAAMA,KAAOsB,GAASiB,WAAY,CACrC,GAAMlH,GAAOiG,EAASiB,WAAWvC,GAC3B/C,EAAOG,EAAa/B,EAC1B,KAAK4B,EACH,KAAM,IAAIoE,OAAJ,2BAAqChG,EAG7CZ,MAAKkH,YAAYW,IAAItC,EAAK/C,GAC1BxC,KAAKqH,OAAOQ,IAAItC,EAAK,MAGvB,IAAK,GAAMA,KAAOsB,GAASkB,UAAW,CACpC,GAAMnH,GAAOiG,EAASkB,UAAUxC,GAC1ByC,EAAOhF,EAAWC,EAASrC,EACjC,KAAKoH,EACH,KAAM,IAAIpB,OAAJ,0BAAoChG,EAG5CZ,MAAKsH,MAAMO,IAAItC,EAAKyC,GAGtB,IAAK,GAAMzC,KAAOsB,GAASoB,WAAY,IAAAC,GAAA/E,EACb0D,EAASoB,WAAW1C,GADP,GAC7B/C,EAD6B0F,EAAA,GACvBxH,EADuBwH,EAAA,EAErC,IAAa,UAAT1F,EAIF,KAAM,IAAIoE,OAAJ,2BAAqCpE,EAH3CxC,MAAKmH,YAAYU,IAAItC,EAAK,UAC1BvF,KAAKuH,OAAOM,IAAItC,EAAK7E,GAAS,GA3DP,GAAAyH,IAAA,EAAAC,GAAA,EAAAC,MAAA1D,EAAA,KAiE3B,OAAA2D,GAAAC,EAAmB1B,EAAS2B,OAA5B3D,OAAAC,cAAAqD,GAAAG,EAAAC,EAAAtC,QAAAC,MAAAiC,GAAA,EACE,IAAK,GADIM,GAAyBH,EAAA5H,MACzBL,EAAI,EAAGI,EAAIgI,EAAKxG,OAAS,EAAG5B,EAAII,IAAKJ,EAC5CL,KAAKwH,OAAOrB,MACVjE,KAAMuG,EAAKpI,GACXqI,GAAID,EAAKpI,EAAI,KArEQ,MAAA+F,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,aAAA+B,GAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,KAAAC,IAAA,GAAAO,IAAA,EAAAC,GAAA,EAAAC,MAAAnE,EAAA,KA0E3B,OAAAoE,GAAAC,EAAmBnC,EAASoC,MAA5BpE,OAAAC,cAAA8D,GAAAG,EAAAC,EAAA/C,QAAAC,MAAA0C,GAAA,EAAmC,IAAxBH,GAAwBM,EAAArI,KACjCV,MAAKyH,OAAOtB,MACV6B,KAAMS,EAAK,GACXrF,MAAOqF,EAAK,GACZ/H,MAAO+H,EAAK,MA9EW,MAAArC,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,aAAAwC,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAkF3B9I,KAAKkJ,QAAS,EFochB,MA9cAjE,GAAaT,IACXe,IAAK,QACLpE,IAAK,WEhHL,QAASnB,KAAKkJ,UFoHd3D,IAAK,UACLpE,IAAK,WEjHL,SAAAsD,OAAA7C,EAAY5B,KAAKoH,QAAQ+B,YFqHzB5D,IAAK,SACLpE,IAAK,WElHL,SAAAsD,OAAA7C,EAAY5B,KAAKqH,OAAO8B,YFsHxB5D,IAAK,SACLpE,IAAK,WEnHL,SAAAsD,OAAA7C,EAAY5B,KAAKuH,OAAO4B,YFuHxB5D,IAAK,QACLpE,IAAK,WEpHL,SAAAsD,OAAA7C,EAAY5B,KAAKsH,MAAM6B,YFwHvB5D,IAAK,UACLpE,IAAK,WErHL,MAAOnB,MAAK0H,UFwHZG,IAAK,SErHKnH,GACV,GAAqB,iBAAVA,GACT,KAAM,IAAIkG,OAAM,kCAElB,KAAK5G,KAAKkJ,OACR,KAAM,IAAItC,OAAM,sBAGlB5G,MAAK0H,SAAWhH,EAChB0I,qBAAqBpJ,KAAK2H,UACtBjH,GACFV,KAAKqJ,eF8PTpE,EAAaT,IACXe,IAAK,UACL7E,MAAO,WEtKPV,KAAKsJ,SAAU,EAEXtJ,KAAKkJ,QACPlJ,KAAKuJ,cAGPvJ,KAAK+G,SAAW,KAChB/G,KAAKgH,aAAe,KACpBhH,KAAKkH,YAAc,KACnBlH,KAAKmH,YAAc,KACnBnH,KAAKoH,QAAU,KACfpH,KAAKqH,OAAS,KACdrH,KAAKsH,MAAQ,KACbtH,KAAKuH,OAAS,KACdvH,KAAKwH,OAAS,KACdxH,KAAKyH,OAAS,KACdzH,KAAKkJ,QAAS,KF0Kd3D,IAAK,aACL7E,MAAO,SExKE8I,EAAI9I,GACb,IAAKV,KAAKkJ,OACR,KAAM,IAAItC,OAAM,sBAElB,IAAkB,gBAAP4C,GACT,KAAM,IAAI5C,OAAM,iCALE,IAQZI,GAAiBhH,KAAjBgH,YACR,KAAKA,EAAayC,IAAID,GACpB,KAAM,IAAI5C,OAAJ,qCAA+C4C,EAEvD,IAAM9I,KAAWA,YAAiBsG,GAAa7F,IAAIqI,IACjD,KAAM,IAAI5C,OAAJ,0BACwBI,EAAa7F,IAAIqI,GAAIxE,YAAYpE,KADzD,IAKRZ,MAAKuJ,cACLvJ,KAAKoH,QAAQS,IAAI2B,EAAI9I,GACrBV,KAAK0J,cF0KLnE,IAAK,YACL7E,MAAO,SExKC8I,EAAI9I,GACZ,IAAKV,KAAKkJ,OACR,KAAM,IAAItC,OAAM,sBAElB,IAAkB,gBAAP4C,GACT,KAAM,IAAI5C,OAAM,iCALC,IAQXM,GAAgBlH,KAAhBkH,WACR,KAAKA,EAAYuC,IAAID,GACnB,KAAM,IAAI5C,OAAJ,oCAA8C4C,EAEtD,IAAM9I,KAAWA,YAAiBwG,GAAY/F,IAAIqI,IAChD,KAAM,IAAI5C,OAAJ,0BACwBM,EAAY/F,IAAIqI,GAAIhI,UAAUwD,YAAYpE,KADlE,IAKRZ,MAAKuJ,cACLvJ,KAAKqH,OAAOQ,IAAI2B,EAAI9I,GACpBV,KAAK0J,cF0KLnE,IAAK,WACL7E,MAAO,SExKA8I,EAAI9I,GACX,IAAKV,KAAKkJ,OACR,KAAM,IAAItC,OAAM,sBAElB,IAAkB,gBAAP4C,GACT,KAAM,IAAI5C,OAAM,iCALA,IAQVO,GAAgBnH,KAAhBmH,WACR,KAAKA,EAAYsC,IAAID,GACnB,KAAM,IAAI5C,OAAJ,oCAA8C4C,EAEtD,SAAI,KAAO9I,EAAP,YAAAkE,EAAOlE,MAAUyG,EAAYhG,IAAIqI,GACnC,KAAM,IAAI5C,OAAJ,0BACwBO,EAAYhG,IAAIqI,GADxC,IAKRxJ,MAAKuH,OAAOM,IAAI2B,EAAI9I,MF0KpB6E,IAAK,WACL7E,MAAO,WExKE,GAAAiJ,GAAA3J,IACT,KAAKA,KAAKkJ,OACR,KAAM,IAAItC,OAAM,sBAFT,IAKDa,GAAmBzH,KAAnByH,OALCmC,GAKkB5J,KAAXuH,QALP,GAAAsC,GAAA,EAAAC,MAAAnF,EAAA,KAMT,OAAAoF,GAAAC,EAAmBvC,EAAnB5C,OAAAC,cAAA8E,GAAAG,EAAAC,EAAA/D,QAAAC,MAAA0D,GAAA,EAA2B,IAAhBnB,GAAgBsB,EAAArJ,MACjBsH,EAAuBS,EAAvBT,KAAM5E,EAAiBqF,EAAjBrF,MAAO1C,EAAU+H,EAAV/H,MACfU,EAAIpB,KAAKiK,UAAUjC,EACzB,IAAK5G,GAAOgC,IAAShC,GAArB,CAIA,GAAM8I,GAAIlK,KAAKmK,UAAUzJ,EACrB,UAAWU,GAAEgC,GACfhC,EAAEgC,GAAO1C,MAAQwJ,EAEjB9I,EAAEgC,GAAS8G,IAjBN,MAAA9D,GAAAyD,GAAA,EAAAC,EAAA1D,EAAA,aAAAwD,GAAAI,EAAArB,QAAAqB,EAAArB,SAAA,WAAAkB,EAAA,KAAAC,IAqBT9J,KAAK2H,SAAWyC,sBAAsB,iBAAMT,GAAKN,gBFuMjD9D,IAAK,YACL7E,MAAO,SErMC8I,GAAI,GACJpC,GAA2BpH,KAA3BoH,QAASC,EAAkBrH,KAAlBqH,OAAQC,EAAUtH,KAAVsH,KAEzB,OAAIF,GAAQqC,IAAID,GACPpC,EAAQjG,IAAIqI,GACVnC,EAAOoC,IAAID,GACbnC,EAAOlG,IAAIqI,GACTlC,EAAMmC,IAAID,GACZlC,EAAMnG,IAAIqI,GAGZ,QF2MPjE,IAAK,YACL7E,MAAO,SEzMCA,GAAO,GACP6G,GAAWvH,KAAXuH,MAER,IAAqB,gBAAV7G,GAAoB,CAC7B,IAAK6G,EAAOkC,IAAI/I,GACd,KAAM,IAAIkG,OAAJ,8BAAwClG,EAGhD,OAAO6G,GAAOpG,IAAIT,GACb,GAAIA,YAAiB2D,UAAU,CACpC,GAAMgG,MAD8BC,GAAA,EAAAC,GAAA,EAAAC,MAAA7F,EAAA,KAGpC,OAAA8F,GAAAC,EAAqBnD,EAArB1C,OAAAC,cAAAwF,GAAAG,EAAAC,EAAAzE,QAAAC,MAAAoE,GAAA,EAA6B,IAAAK,GAAAxH,EAAAsH,EAAA/J,MAAA,GAAjBkK,EAAiBD,EAAA,GAAdT,EAAcS,EAAA,EAC3BN,GAAOO,GAAKV,GAJsB,MAAA9D,GAAAmE,GAAA,EAAAC,EAAApE,EAAA,aAAAkE,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAOpC,MAAO9J,GAAMH,KAAK8J,GAGpB,MAAO3J,MFoOP6E,IAAK,WACL7E,MAAO,WElOE,GACD8G,GAAWxH,KAAXwH,OADCqD,GAAA,EAAAC,GAAA,EAAAC,MAAApG,EAAA,KAGT,OAAAqG,GAAAC,EAAmBzD,EAAnB3C,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAhF,QAAAC,MAAA2E,GAAA,EAA2B,IAAhBpC,GAAgBuC,EAAAtK,MACnBwB,EAAOlC,KAAKiK,UAAUxB,EAAKvG,MAC3BwG,EAAK1I,KAAKiK,UAAUxB,EAAKC,GAE1BxG,IAASwG,GAIdxG,EAAKgJ,QAAQxC,IAXN,MAAAtC,GAAA0E,GAAA,EAAAC,EAAA3E,EAAA,aAAAyE,GAAAI,EAAAtC,QAAAsC,EAAAtC,SAAA,WAAAmC,EAAA,KAAAC,QFsQTxF,IAAK,cACL7E,MAAO,WExPK,GACJ8G,GAAWxH,KAAXwH,OADI2D,GAAA,EAAAC,GAAA,EAAAC,MAAA1G,EAAA,KAGZ,OAAA2G,GAAAC,EAAmB/D,EAAnB3C,OAAAC,cAAAqG,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,GAAA,EAA2B,IAAhB1C,GAAgB6C,EAAA5K,MACnBwB,EAAOlC,KAAKiK,UAAUxB,EAAKvG,MAC3BwG,EAAK1I,KAAKiK,UAAUxB,EAAKC,GAE/B,IAAKxG,GAASwG,EAId,IACExG,EAAKsJ,WAAW9C,GAChB,MAAM+C,MAbE,MAAArF,GAAAgF,GAAA,EAAAC,EAAAjF,EAAA,aAAA+E,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,SF+RP7G,IAGT5E,GAAQ2G,QElkBa/B,GFskBf,SAAU3E,EAAQD,EAASM,GAEjC,YGppBAL,GAAOD,QAKN,WASC,QAAS8L,GAAgBC,EAASC,EAAUC,EAAOC,GACjD9L,KAAK2L,QAAWA,EAChB3L,KAAK4L,SAAWA,EAChB5L,KAAK6L,MAAWA,EAChB7L,KAAK8L,SAAWA,EAChB9L,KAAKY,KAAW,cAEuB,kBAA5BgG,OAAMmF,mBACfnF,MAAMmF,kBAAkB/L,KAAM0L,GAiHlC,QAASM,GAAUC,EAAOC,GAuHxB,QAASC,KACP,MAAOF,GAAMG,UAAUC,EAAcC,GAuBvC,QAASC,GAAuBJ,EAAMK,GACpC,OAAShK,KAAM,UAAW2J,KAAMA,EAAMK,WAAYA,GAGpD,QAASC,GAAqBC,EAAOC,EAAUH,GAC7C,OAAShK,KAAM,QAASkK,MAAOA,EAAOC,SAAUA,EAAUH,WAAYA,GAWxE,QAASI,GAAqBC,GAC5B,OAASrK,KAAM,QAASqK,YAAaA,GAGvC,QAASC,GAAsBC,GAC7B,GAAwCrL,GAApCsL,EAAUC,EAAoBF,EAElC,IAAIC,EACF,MAAOA,EAGP,KADAtL,EAAIqL,EAAM,GACFE,EAAoBvL,IAC1BA,GASF,KANAsL,EAAUC,EAAoBvL,GAC9BsL,GACEE,KAAQF,EAAQE,KAChBC,OAAQH,EAAQG,QAGXzL,EAAIqL,GACmB,KAAxBd,EAAMmB,WAAW1L,IACnBsL,EAAQE,OACRF,EAAQG,OAAS,GAEjBH,EAAQG,SAGVzL,GAIF,OADAuL,GAAoBF,GAAOC,EACpBA,EAIX,QAASK,GAAoBC,EAAUC,GACrC,GAAIC,GAAkBV,EAAsBQ,GACxCG,EAAkBX,EAAsBS,EAE5C,QACEG,OACEC,OAAQL,EACRJ,KAAQM,EAAgBN,KACxBC,OAAQK,EAAgBL,QAE1BS,KACED,OAAQJ,EACRL,KAAQO,EAAcP,KACtBC,OAAQM,EAAcN,SAK5B,QAASU,GAASjC,GACZU,EAAcwB,IAEdxB,EAAcwB,IAChBA,EAAiBxB,EACjByB,MAGFA,EAAoB5H,KAAKyF,IAO3B,QAASoC,GAAyBpC,EAAUC,EAAOC,GACjD,MAAO,IAAIJ,GACTA,EAAgBuC,aAAarC,EAAUC,GACvCD,EACAC,EACAC,GAIJ,QAASoC,GAAWvM,GAClB,GAA8BtB,GAA1B8N,EAAK,GAAIrM,OAAMH,EAAEM,OAErB,KAAK5B,EAAI,EAAGA,EAAIsB,EAAEM,OAAQ5B,IACxB8N,EAAG9N,GAAKsB,EAAEyL,WAAW/M,GAAK,EAG5B,OAAO8N,GAGT,QAASC,GAAcC,GASrB,IARA,GAMIhE,GAAQhK,EANR8N,EAAQG,EAAaD,GACrBE,EAAQ,EACRC,KACAZ,EAAQO,EAAGlM,OACXwM,KACAC,OAGS,CACX,KAAOH,EAAKX,GACV,OAAQO,EAAGI,IACT,IAAK,GACHG,EAAMvI,KAAKwI,EAAWR,EAAGI,EAAK,KAC9BA,GAAM,CACN,MAEF,KAAK,GACHG,EAAMvI,SAAK,IACXoI,GACA,MAEF,KAAK,GACHG,EAAMvI,KAAK,MACXoI,GACA,MAEF,KAAK,GACHG,EAAMvI,KAAKyI,GACXL,GACA,MAEF,KAAK,GACHG,EAAMvI,SACNoI,GACA,MAEF,KAAK,GACHG,EAAMvI,KAAKmG,GACXiC,GACA,MAEF,KAAK,GACHG,EAAMG,MACNN,GACA,MAEF,KAAK,GACHjC,EAAcoC,EAAMG,MACpBN,GACA,MAEF,KAAK,GACHG,EAAMzM,QAAUkM,EAAGI,EAAK,GACxBA,GAAM,CACN,MAEF,KAAK,GACHG,EAAMI,QAAQ,EAAG,GACjBP,GACA,MAEF,KAAK,IACHG,EAAMA,EAAMzM,OAAS,GAAGkE,KAAKuI,EAAMG,OACnCN,GACA,MAEF,KAAK,IACHG,EAAMvI,KAAKuI,EAAMI,OAAOJ,EAAMzM,OAASkM,EAAGI,EAAK,GAAIJ,EAAGI,EAAK,KAC3DA,GAAM,CACN,MAEF,KAAK,IACHG,EAAMvI,KAAK8F,EAAMG,UAAUsC,EAAMG,MAAOvC,IACxCiC,GACA,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCG,EAAMA,EAAMzM,OAAS,IACvB2L,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCG,EAAMA,EAAMzM,OAAS,KAAO2M,GAC9BhB,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCG,EAAMA,EAAMzM,OAAS,KAAO2M,GAC9BhB,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACCG,EAAMA,EAAMzM,OAAS,KAAO2M,GAC9BH,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,GAETX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,GAENA,GAAM,EAAIJ,EAAGI,EAAK,EAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCtC,EAAMhK,OAASqK,GACjBsB,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCtC,EAAM8C,OAAOzC,EAAaqC,EAAWR,EAAGI,EAAK,IAAItM,UAAY0M,EAAWR,EAAGI,EAAK,KAClFX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCtC,EAAM8C,OAAOzC,EAAaqC,EAAWR,EAAGI,EAAK,IAAItM,QAAQ+M,gBAAkBL,EAAWR,EAAGI,EAAK,KAChGX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHE,EAAKtI,KAAKyH,GACVY,EAAIrI,KAAKoI,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,IAEnCI,EAAWR,EAAGI,EAAK,IAAIU,KAAKhD,EAAMiD,OAAO5C,KAC3CsB,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GACvBA,GAAM,IAENX,EAAMW,EAAK,EAAIJ,EAAGI,EAAK,GAAKJ,EAAGI,EAAK,GACpCA,GAAM,EAAIJ,EAAGI,EAAK,GAGpB,MAEF,KAAK,IACHG,EAAMvI,KAAK8F,EAAM8C,OAAOzC,EAAa6B,EAAGI,EAAK,KAC7CjC,GAAe6B,EAAGI,EAAK,GACvBA,GAAM,CACN,MAEF,KAAK,IACHG,EAAMvI,KAAKwI,EAAWR,EAAGI,EAAK,KAC9BjC,GAAeqC,EAAWR,EAAGI,EAAK,IAAItM,OACtCsM,GAAM,CACN,MAEF,KAAK,IACHG,EAAMvI,KAAKyI,GACa,IAApBO,GACFtB,EAASc,EAAWR,EAAGI,EAAK,KAE9BA,GAAM,CACN,MAEF,KAAK,IACHlC,EAAeqC,EAAMA,EAAMzM,OAAS,EAAIkM,EAAGI,EAAK,IAChDA,GAAM,CACN,MAEF,KAAK,IACHlC,EAAeC,EACfiC,GACA,MAEF,KAAK,IAEH,IADAlE,EAAS8D,EAAGiB,MAAMb,EAAK,EAAGA,EAAK,EAAIJ,EAAGI,EAAK,IACtClO,EAAI,EAAGA,EAAI8N,EAAGI,EAAK,GAAIlO,IAC1BgK,EAAOhK,GAAKqO,EAAMA,EAAMzM,OAAS,EAAIoI,EAAOhK,GAG9CqO,GAAMI,OACJJ,EAAMzM,OAASkM,EAAGI,EAAK,GACvBJ,EAAGI,EAAK,GACRI,EAAWR,EAAGI,EAAK,IAAIhK,MAAM,KAAM8F,IAGrCkE,GAAM,EAAIJ,EAAGI,EAAK,EAClB,MAEF,KAAK,IACHG,EAAMvI,KAAKiI,EAAcD,EAAGI,EAAK,KACjCA,GAAM,CACN,MAEF,KAAK,IACHY,IACAZ,GACA,MAEF,KAAK,IACHY,IACAZ,GACA,MAEF,SACE,KAAM,IAAI3H,OAAM,mBAAqBuH,EAAGI,GAAM,KAIpD,KAAIE,EAAKxM,OAAS,GAIhB,KAHA2L,GAAMa,EAAKI,MACXN,EAAKC,EAAIK,MAMb,MAAOH,GAAM,GAWb,QAASW,GAAWnN,EAAMwG,GACtB,GAAMrF,IAAWnB,EAEjB,OADAwG,GAAG4G,IAAI,SAAA7G,GAAA,MAAQpF,GAAO8C,KAAKsC,EAAK,MACzBpF,EAGX,QAASkM,GAAWC,GACnB,MAAO,IAAInL,UAAS,UAAYmL,EAAO,KA9gB1CtD,MAAsB,KAAZA,EAAqBA,IAE/B,IA0GIuD,GA1GAb,KAEAc,GAAyBC,QAAS,GAClCC,EAAuB,EAEvBjB,GACE,WAAa,OACT/G,cACAE,aACAC,YACAE,aACAO,SACAS,UAEJ,SAAS/G,EAAMwG,GAAMF,EAAOrC,KAAKkJ,EAAWnN,EAAMwG,KAClD,IACA6D,EAAuB,KAAK,GAC5B,IACAA,EAAuB,KAAK,GAC5B,SAASvE,EAAM5E,EAAO1C,GAASuI,EAAM9C,MAAO6B,EAAM5E,EAAO1C,KACzDkM,EAAqB,UACrB,SAASpK,EAAMgH,GAAM5B,EAAY4B,GAAMhH,GACvCoK,EAAqB,SACrB,SAASpK,EAAMgH,GAAM1B,EAAW0B,GAAMhH,GACtCoK,EAAqB,QACrB,IACAL,EAAuB,KAAK,GAC5B,IACAA,EAAuB,KAAK,GAC5B,SAAS/J,EAAMgH,EAAIpG,GAAS2E,EAAUyB,IAAQhH,EAAMY,GAASA,EAAM,KACnEwJ,EAAqB,SACrB,SAASpK,EAAMgH,EAAIpG,GAAS6E,EAAWuB,IAAQhH,EAAMY,GAASA,EAAM,KACpE,SACAmJ,EAAuB,UAAU,GACjC,QACAA,EAAuB,SAAS,GAChC,OACAA,EAAuB,QAAQ,GAC/B,QACAA,EAAuB,SAAS,GAChCK,EAAqB,SACrBA,EAAqB,cACrB,aACAH,GAAsB,KAAM,IAAK,MAAO,IAAK,OAAO,GAAO,GAC3D,gBACAA,GAAsB,KAAM,IAAK,MAAO,IAAK,MAAO,IAAK,OAAO,GAAO,GACvE,WAAa,MAAON,MACpBS,EAAqB,SACrB,IACAL,EAAuB,KAAK,GAC5B,SACAE,IAAuB,IAAK,OAAO,GAAO,GAC1C,WAAa,MAAOoD,YAAW1D,MAC/BS,EAAqB,UACrB,IACAL,EAAuB,KAAK,GAC5B,IACAA,EAAuB,KAAK,GAC5B,SAASuD,GAAY,MAAOP,GAAWO,EAASC,SAChD,UACAtD,GAAsB,IAAM,IAAK,MAAO,GAAM,GAC9CG,EAAqB,WACrB,KACAL,EAAuB,MAAM,GAC7BK,EAAqB,aACrB,IACAL,EAAuB,KAAK,GAC5BK,EAAqB,cACrB,aACAH,GAAsB,IAAK,KAAM,KAAM,OAAO,GAAO,GACrDG,EAAqB,mBAGvB0B,GACEJ,EAAW,wBACXA,EAAW,sDACXA,EAAW,6IACXA,EAAW,qIACXA,EAAW,yFACXA,EAAW,qDACXA,EAAW,qEACXA,EAAW,qEACXA,EAAW,6JACXA,EAAW,6JACXA,EAAW,YACXA,EAAW,YACXA,EAAW,YACXA,EAAW,YACXA,EAAW,mBACXA,EAAW,0EACXA,EAAW,wJACXA,EAAW,uEACXA,EAAW,oCACXA,EAAW,kDACXA,EAAW,qGACXA,EAAW,sCACXA,EAAW,iCAGb5B,EAAuB,EACvBD,EAAuB,EACvBY,IAA0BC,KAAM,EAAGC,OAAQ,IAC3CW,EAAuB,EACvBC,KACAoB,EAAuB,CAI3B,IAAI,aAAejD,GAAS,CAC1B,KAAMA,EAAQ8D,YAAaN,IACzB,KAAM,IAAI9I,OAAM,mCAAqCsF,EAAQ8D,UAAY,KAG3EJ,GAAqBF,EAAqBxD,EAAQ8D,WA6YlD,GAAMpI,MACAE,KACAC,KACAE,KACAO,KACAS,IAeR,KAFAwG,EAAarB,EAAcwB,MAERhB,GAActC,IAAgBL,EAAMhK,OACrD,MAAOwN,EAMP,MAJIA,KAAeb,GAActC,EAAcL,EAAMhK,QACnD4L,EA9XJ,WACE,OAASrL,KAAM,WAgYTwL,EACJD,EACAD,EAAiB7B,EAAMhK,OAASgK,EAAMiD,OAAOpB,GAAkB,KAC/DA,EAAiB7B,EAAMhK,OACnBoL,EAAoBS,EAAgBA,EAAiB,GACrDT,EAAoBS,EAAgBA,IAK9C,MArqBA,UAAsBmC,EAAOC,GAC3B,QAASC,KAASnQ,KAAKgF,YAAciL,EACrCE,EAAK3O,UAAY0O,EAAO1O,UACxByO,EAAMzO,UAAY,GAAI2O,IAeXzE,EAAiB9E,OAE9B8E,EAAgBuC,aAAe,SAASrC,EAAUC,GAgChD,QAASuE,GAAIC,GACX,MAAOA,GAAGjD,WAAW,GAAGkD,SAAS,IAAIC,cAGvC,QAASC,GAAc7O,GACrB,MAAOA,GACJ8O,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASJ,GAAM,MAAO,OAASD,EAAIC,KACpEI,QAAQ,wBAAyB,SAASJ,GAAM,MAAO,MAASD,EAAIC,KAGzE,QAASK,GAAY/O,GACnB,MAAOA,GACJ8O,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASJ,GAAM,MAAO,OAASD,EAAIC,KACpEI,QAAQ,wBAAyB,SAASJ,GAAM,MAAO,MAASD,EAAIC,KAGzE,QAASM,GAAoBC,GAC3B,MAAOC,GAAyBD,EAAYpO,MAAMoO,GA9DpD,GAAIC,IACEC,QAAS,SAASF,GAChB,MAAO,IAAOJ,EAAcI,EAAYzE,MAAQ,KAGlD4E,MAAS,SAASH,GAChB,GACIvQ,GADA2Q,EAAe,EAGnB,KAAK3Q,EAAI,EAAGA,EAAIuQ,EAAYlE,MAAMzK,OAAQ5B,IACxC2Q,GAAgBJ,EAAYlE,MAAMrM,YAAcyB,OAC5C4O,EAAYE,EAAYlE,MAAMrM,GAAG,IAAM,IAAMqQ,EAAYE,EAAYlE,MAAMrM,GAAG,IAC9EqQ,EAAYE,EAAYlE,MAAMrM,GAGpC,OAAO,KAAOuQ,EAAYjE,SAAW,IAAM,IAAMqE,EAAe,KAGlEC,IAAK,SAASL,GACZ,MAAO,iBAGThD,IAAK,SAASgD,GACZ,MAAO,gBAGTM,MAAO,SAASN,GACd,MAAOA,GAAY/D,aA4E3B,OAAO,YAtCP,SAA0BjB,GACxB,GACIvL,GAAG8Q,EADHC,EAAe,GAAItP,OAAM8J,EAAS3J,OAGtC,KAAK5B,EAAI,EAAGA,EAAIuL,EAAS3J,OAAQ5B,IAC/B+Q,EAAa/Q,GAAKsQ,EAAoB/E,EAASvL,GAKjD,IAFA+Q,EAAaC,OAETD,EAAanP,OAAS,EAAG,CAC3B,IAAK5B,EAAI,EAAG8Q,EAAI,EAAG9Q,EAAI+Q,EAAanP,OAAQ5B,IACtC+Q,EAAa/Q,EAAI,KAAO+Q,EAAa/Q,KACvC+Q,EAAaD,GAAKC,EAAa/Q,GAC/B8Q,IAGJC,GAAanP,OAASkP,EAGxB,OAAQC,EAAanP,QACnB,IAAK,GACH,MAAOmP,GAAa,EAEtB,KAAK,GACH,MAAOA,GAAa,GAAK,OAASA,EAAa,EAEjD,SACE,MAAOA,GAAahC,MAAM,GAAI,GAAGkC,KAAK,MAClC,QACAF,EAAaA,EAAanP,OAAS,KAQP2J,GAAY,QAJlD,SAAuBC,GACrB,MAAOA,GAAQ,IAAO2E,EAAc3E,GAAS,IAAO,gBAGoBA,GAAS,YA0iBnF0F,YAAa7F,EACb5E,MAAakF,OHgkBX,SAAUnM,EAAQD,EAASM,GAEjCL,EAAOD,QAAUM,EAAoB","file":"waver.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Waver\"] = factory();\n\telse\n\t\troot[\"Waver\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Waver\"] = factory();\n\telse\n\t\troot[\"Waver\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parser = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.createAudioContext = createAudioContext;\nexports.createWaver = createWaver;\n\nvar _parser = __webpack_require__(1);\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.parser = _parser2.default;\n\n\nvar audioContext = window.AudioContext || window.webkitAudioContext;\n\nfunction mapOutputType(type) {\n  if (type === 'destination') {\n    return AudioDestinationNode;\n  } else if (type === 'stream') {\n    return MediaStreamAudioDestinationNode;\n  }\n\n  return null;\n}\n\nfunction mapInputType(type) {\n  if (type === 'buffer') {\n    return AudioBufferSourceNode;\n  } else if (type === 'constant') {\n    return ConstantSourceNode;\n  } else if (type === 'media') {\n    return MediaElementAudioSourceNode;\n  } else if (type === 'stream') {\n    return MediaStreamAudioSourceNode;\n  }\n\n  return null;\n}\n\nfunction createNode(context, type) {\n  var _type = _slicedToArray(type, 2),\n      name = _type[0],\n      param = _type[1];\n\n  if (name === 'biquadFilter') {\n    var result = context.createBiquadFilter();\n    if (param !== null) {\n      result.type = param;\n    }\n    return result;\n  } else if (name === 'delay') {\n    return context.createDelay(param);\n  } else if (name === 'compressor') {\n    return context.createDynamicsCompressor();\n  } else if (name === 'gain') {\n    var _result = context.createGain();\n    if (param !== null) {\n      _result.gain.value = param;\n    }\n    return _result;\n  } else if (name === 'oscillator') {\n    var _result2 = context.createOscillator();\n    if (param !== null) {\n      _result2.type = param;\n    }\n    return _result2;\n  } else if (name === 'pan') {\n    var _result3 = context.createStereoPanner();\n    if (param !== null) {\n      _result3.pan.value = param;\n    }\n    return _result3;\n  }\n\n  return null;\n}\n\nfunction createAudioContext() {\n  return new audioContext();\n}\n\nfunction createWaver() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new (Function.prototype.bind.apply(Waver, [null].concat(args)))();\n}\n\nvar Waver = function () {\n  _createClass(Waver, [{\n    key: 'valid',\n    get: function get() {\n      return !!this._valid;\n    }\n  }, {\n    key: 'outputs',\n    get: function get() {\n      return [].concat(_toConsumableArray(this._output.keys()));\n    }\n  }, {\n    key: 'inputs',\n    get: function get() {\n      return [].concat(_toConsumableArray(this._input.keys()));\n    }\n  }, {\n    key: 'params',\n    get: function get() {\n      return [].concat(_toConsumableArray(this._param.keys()));\n    }\n  }, {\n    key: 'nodes',\n    get: function get() {\n      return [].concat(_toConsumableArray(this._node.keys()));\n    }\n  }, {\n    key: 'enabled',\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(value) {\n      if (typeof value !== 'boolean') {\n        throw new Error('`value` is not type of Boolean!');\n      }\n      if (!this._valid) {\n        throw new Error('Waver is not valid!');\n      }\n\n      this._enabled = value;\n      cancelAnimationFrame(this._request);\n      if (value) {\n        this._process();\n      }\n    }\n  }]);\n\n  function Waver(context, source) {\n    _classCallCheck(this, Waver);\n\n    if (!(context instanceof audioContext)) {\n      throw new Error('`context` is not type of AudioContext!');\n    }\n    if (typeof source !== 'string') {\n      throw new Error('`source` is not type of String!');\n    }\n\n    var compiled = _parser2.default.parse(source);\n\n    this._context = context;\n    this._outputTypes = new Map();\n    this._inputTypes = new Map();\n    this._paramTypes = new Map();\n    this._output = new Map();\n    this._input = new Map();\n    this._node = new Map();\n    this._param = new Map();\n    this._chain = [];\n    this._setup = [];\n    this._enabled = false;\n    this._request = 0;\n\n    for (var key in compiled.outputTypes) {\n      var name = compiled.outputTypes[key];\n      var type = mapOutputType(name);\n      if (!type) {\n        throw new Error('Unsupported output type: ' + name);\n      }\n\n      this._outputTypes.set(key, type);\n      this._output.set(key, null);\n    }\n\n    for (var _key2 in compiled.inputTypes) {\n      var _name = compiled.inputTypes[_key2];\n      var _type2 = mapInputType(_name);\n      if (!_type2) {\n        throw new Error('Unsupported input type: ' + _name);\n      }\n\n      this._inputTypes.set(_key2, _type2);\n      this._input.set(_key2, null);\n    }\n\n    for (var _key3 in compiled.nodeTypes) {\n      var _name2 = compiled.nodeTypes[_key3];\n      var node = createNode(context, _name2);\n      if (!node) {\n        throw new Error('Unsupported node type: ' + _name2);\n      }\n\n      this._node.set(_key3, node);\n    }\n\n    for (var _key4 in compiled.paramTypes) {\n      var _compiled$paramTypes$ = _slicedToArray(compiled.paramTypes[_key4], 2),\n          _type3 = _compiled$paramTypes$[0],\n          value = _compiled$paramTypes$[1];\n\n      if (_type3 === 'float') {\n        this._paramTypes.set(_key4, 'number');\n        this._param.set(_key4, value || 0);\n      } else {\n        throw new Error('Unsupported param type: ' + _type3);\n      }\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = compiled.chains[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        for (var i = 0, c = item.length - 1; i < c; ++i) {\n          this._chain.push({\n            from: item[i],\n            to: item[i + 1]\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = compiled.setup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _item = _step2.value;\n\n        this._setup.push({\n          node: _item[0],\n          param: _item[1],\n          value: _item[2]\n        });\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    this._valid = true;\n  }\n\n  _createClass(Waver, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.enabled = false;\n\n      if (this._valid) {\n        this._disconnect();\n      }\n\n      this._context = null;\n      this._outputTypes = null;\n      this._inputTypes = null;\n      this._paramTypes = null;\n      this._output = null;\n      this._input = null;\n      this._node = null;\n      this._param = null;\n      this._chain = null;\n      this._setup = null;\n      this._valid = false;\n    }\n  }, {\n    key: 'bindOutput',\n    value: function bindOutput(id, value) {\n      if (!this._valid) {\n        throw new Error('Waver is not valid!');\n      }\n      if (typeof id !== 'string') {\n        throw new Error('`value` is not type of String!');\n      }\n\n      var _outputTypes = this._outputTypes;\n\n      if (!_outputTypes.has(id)) {\n        throw new Error('Waver does not have output named: ' + id);\n      }\n      if (!!value && !(value instanceof _outputTypes.get(id))) {\n        throw new Error('`value` is not type of ' + _outputTypes.get(id).constructor.name + '!');\n      }\n\n      this._disconnect();\n      this._output.set(id, value);\n      this._connect();\n    }\n  }, {\n    key: 'bindInput',\n    value: function bindInput(id, value) {\n      if (!this._valid) {\n        throw new Error('Waver is not valid!');\n      }\n      if (typeof id !== 'string') {\n        throw new Error('`value` is not type of String!');\n      }\n\n      var _inputTypes = this._inputTypes;\n\n      if (!_inputTypes.has(id)) {\n        throw new Error('Waver does not have input named: ' + id);\n      }\n      if (!!value && !(value instanceof _inputTypes.get(id))) {\n        throw new Error('`value` is not type of ' + _inputTypes.get(id).prototype.constructor.name + '!');\n      }\n\n      this._disconnect();\n      this._input.set(id, value);\n      this._connect();\n    }\n  }, {\n    key: 'setParam',\n    value: function setParam(id, value) {\n      if (!this._valid) {\n        throw new Error('Waver is not valid!');\n      }\n      if (typeof id !== 'string') {\n        throw new Error('`value` is not type of String!');\n      }\n\n      var _paramTypes = this._paramTypes;\n\n      if (!_paramTypes.has(id)) {\n        throw new Error('Waver does not have param named: ' + id);\n      }\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== _paramTypes.get(id)) {\n        throw new Error('`value` is not type of ' + _paramTypes.get(id) + '!');\n      }\n\n      this._param.set(id, value);\n    }\n  }, {\n    key: '_process',\n    value: function _process() {\n      var _this = this;\n\n      if (!this._valid) {\n        throw new Error('Waver is not valid!');\n      }\n\n      var _setup = this._setup,\n          _param = this._param;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _setup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          var node = item.node,\n              param = item.param,\n              value = item.value;\n\n          var n = this._findNode(node);\n          if (!n || !(param in n)) {\n            continue;\n          }\n\n          var v = this._getValue(value);\n          if ('value' in n[param]) {\n            n[param].value = v;\n          } else {\n            n[param] = v;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._request = requestAnimationFrame(function () {\n        return _this._process();\n      });\n    }\n  }, {\n    key: '_findNode',\n    value: function _findNode(id) {\n      var _output = this._output,\n          _input = this._input,\n          _node = this._node;\n\n\n      if (_output.has(id)) {\n        return _output.get(id);\n      } else if (_input.has(id)) {\n        return _input.get(id);\n      } else if (_node.has(id)) {\n        return _node.get(id);\n      }\n\n      return null;\n    }\n  }, {\n    key: '_getValue',\n    value: function _getValue(value) {\n      var _param = this._param;\n\n\n      if (typeof value === 'string') {\n        if (!_param.has(value)) {\n          throw new Error('Waver does not have param: ' + value);\n        }\n\n        return _param.get(value);\n      } else if (value instanceof Function) {\n        var params = {};\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = _param[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _step4$value = _slicedToArray(_step4.value, 2),\n                k = _step4$value[0],\n                v = _step4$value[1];\n\n            params[k] = v;\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        return value.call(params);\n      }\n\n      return value;\n    }\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      var _chain = this._chain;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n\n        for (var _iterator5 = _chain[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var item = _step5.value;\n\n          var from = this._findNode(item.from);\n          var to = this._findNode(item.to);\n\n          if (!from || !to) {\n            continue;\n          }\n\n          from.connect(to);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_disconnect',\n    value: function _disconnect() {\n      var _chain = this._chain;\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n\n        for (var _iterator6 = _chain[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var item = _step6.value;\n\n          var from = this._findNode(item.from);\n          var to = this._findNode(item.to);\n\n          if (!from || !to) {\n            continue;\n          }\n\n          try {\n            from.disconnect(to);\n          } catch (e) {}\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Waver;\n}();\n\nexports.default = Waver;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = /*\r\n                 * Generated by PEG.js 0.10.0.\r\n                 *\r\n                 * http://pegjs.org/\r\n                 */\nfunction () {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function literal(expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n\n      \"class\": function _class(expectation) {\n        var escapedParts = \"\",\n            i;\n\n        for (i = 0; i < expectation.parts.length; i++) {\n          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n        }\n\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n      },\n\n      any: function any(expectation) {\n        return \"any character\";\n      },\n\n      end: function end(expectation) {\n        return \"end of input\";\n      },\n\n      other: function other(expectation) {\n        return expectation.description;\n      }\n    };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function classEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i,\n          j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n        peg$startRuleIndices = { Program: 0 },\n        peg$startRuleIndex = 0,\n        peg$consts = [function () {\n      return {\n        outputTypes: outputTypes,\n        inputTypes: inputTypes,\n        nodeTypes: nodeTypes,\n        paramTypes: paramTypes,\n        chains: chains,\n        setup: setup\n      };\n    }, function (from, to) {\n      chains.push(parseChain(from, to));\n    }, \".\", peg$literalExpectation(\".\", false), \"=\", peg$literalExpectation(\"=\", false), function (node, param, value) {\n      setup.push([node, param, value]);\n    }, peg$otherExpectation(\"output\"), function (type, id) {\n      outputTypes[id] = type;\n    }, peg$otherExpectation(\"input\"), function (type, id) {\n      inputTypes[id] = type;\n    }, peg$otherExpectation(\"node\"), \"(\", peg$literalExpectation(\"(\", false), \")\", peg$literalExpectation(\")\", false), function (type, id, param) {\n      nodeTypes[id] = [type, param && param[3]];\n    }, peg$otherExpectation(\"param\"), function (type, id, param) {\n      paramTypes[id] = [type, param && param[3]];\n    }, \"output\", peg$literalExpectation(\"output\", false), \"input\", peg$literalExpectation(\"input\", false), \"node\", peg$literalExpectation(\"node\", false), \"param\", peg$literalExpectation(\"param\", false), peg$otherExpectation(\"value\"), peg$otherExpectation(\"identifier\"), /^[_a-zA-Z]/, peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"]], false, false), /^[_a-zA-Z0-9]/, peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false), function () {\n      return text();\n    }, peg$otherExpectation(\"float\"), \"-\", peg$literalExpectation(\"-\", false), /^[0-9]/, peg$classExpectation([[\"0\", \"9\"]], false, false), function () {\n      return parseFloat(text());\n    }, peg$otherExpectation(\"lambda\"), \"{\", peg$literalExpectation(\"{\", false), \"}\", peg$literalExpectation(\"}\", false), function (contents) {\n      return evalLambda(contents.trim());\n    }, /^[^\"}\"]/, peg$classExpectation([\"\\\"\", \"}\", \"\\\"\"], true, false), peg$otherExpectation(\"connect\"), \"=>\", peg$literalExpectation(\"=>\", false), peg$otherExpectation(\"semicolon\"), \";\", peg$literalExpectation(\";\", false), peg$otherExpectation(\"whitespace\"), /^[ \\t\\n\\r]/, peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false), peg$otherExpectation(\"whitespace_any\")],\n        peg$bytecode = [peg$decode(\"%$;!0#*;!&/& 8!: ! )\"), peg$decode(\"%;6/G#;%./ &;\\\".) &;#.# &;$/,$;6/#$+#)(#'#(\\\"'#&'#\"), peg$decode(\"%;//\\x9B#$%;6/>#;3/5$;6/,$;//#$+$)($'#(#'#(\\\"'#&'#/K#0H*%;6/>#;3/5$;6/,$;//#$+$)($'#(#'#(\\\"'#&'#&&&#/;$;6/2$;4/)$8$:!$\\\"#\\\")($'#(#'#(\\\"'#&'#\"), peg$decode(\"%;//\\x90#;6/\\x87$2\\\"\\\"\\\"6\\\"7#/x$;6/o$;//f$;6/]$2$\\\"\\\"6$7%/N$;6/E$;./<$;6/3$;4/*$8+:&+#*&\\\")(+'#(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\\\"'#&'#\"), peg$decode(\"%;//f#;6/]$2\\\"\\\"\\\"6\\\"7#/N$;6/E$;//<$;6/3$;1/*$8':&'#&\\\" )(''#(&'#(%'#($'#(#'#(\\\"'#&'#\"), peg$decode(\"%;&./ &;'.) &;(.# &;)/5#;6/,$;4/#$+#)(#'#(\\\"'#&'#\"), peg$decode(\"<%;*/M#;5/D$;//;$;5/2$;//)$8%:(%\\\"\\\" )(%'#($'#(#'#(\\\"'#&'#=.\\\" 7'\"), peg$decode(\"<%;+/M#;5/D$;//;$;5/2$;//)$8%:*%\\\"\\\" )(%'#($'#(#'#(\\\"'#&'#=.\\\" 7)\"), peg$decode(\"<%;,/\\x9F#;5/\\x96$;//\\x8D$;5/\\x84$;//{$%;6/\\\\#2,\\\"\\\"6,7-/M$;6/D$;./;$;6/2$2.\\\"\\\"6.7//#$+&)(&'#(%'#($'#(#'#(\\\"'#&'#.\\\" &\\\"/*$8&:0&##! )(&'#(%'#($'#(#'#(\\\"'#&'#=.\\\" 7+\"), peg$decode(\"<%;-/\\x9F#;5/\\x96$;//\\x8D$;5/\\x84$;//{$%;6/\\\\#2,\\\"\\\"6,7-/M$;6/D$;./;$;6/2$2.\\\"\\\"6.7//#$+&)(&'#(%'#($'#(#'#(\\\"'#&'#.\\\" &\\\"/*$8&:2&##! )(&'#(%'#($'#(#'#(\\\"'#&'#=.\\\" 71\"), peg$decode(\"23\\\"\\\"6374\"), peg$decode(\"25\\\"\\\"6576\"), peg$decode(\"27\\\"\\\"6778\"), peg$decode(\"29\\\"\\\"697:\"), peg$decode(\"<;0.# &;/=.\\\" 7;\"), peg$decode(\"<%;6/R#4=\\\"\\\"5!7>/C$$4?\\\"\\\"5!7@0)*4?\\\"\\\"5!7@&/'$8#:A# )(#'#(\\\"'#&'#=.\\\" 7<\"), peg$decode(\"<%;6/\\x9D#2C\\\"\\\"6C7D.\\\" &\\\"/\\x89$$4E\\\"\\\"5!7F/,#0)*4E\\\"\\\"5!7F&&&#/g$%2\\\"\\\"\\\"6\\\"7#/E#$4E\\\"\\\"5!7F/,#0)*4E\\\"\\\"5!7F&&&#/#$+\\\")(\\\"'#&'#.\\\" &\\\"/'$8$:G$ )($'#(#'#(\\\"'#&'#=.\\\" 7B\"), peg$decode(\"<%;6/O#2I\\\"\\\"6I7J/@$;2/7$2K\\\"\\\"6K7L/($8$:M$!!)($'#(#'#(\\\"'#&'#=.\\\" 7H\"), peg$decode(\"%$4N\\\"\\\"5!7O0)*4N\\\"\\\"5!7O&/& 8!:A! )\"), peg$decode(\"<%;6/;#2Q\\\"\\\"6Q7R/,$;6/#$+#)(#'#(\\\"'#&'#=.\\\" 7P\"), peg$decode(\"<%;6/k#$%2T\\\"\\\"6T7U/,#;6/#$+\\\")(\\\"'#&'#/?#0<*%2T\\\"\\\"6T7U/,#;6/#$+\\\")(\\\"'#&'#&&&#/#$+\\\")(\\\"'#&'#=.\\\" 7S\"), peg$decode(\"<$4W\\\"\\\"5!7X/,#0)*4W\\\"\\\"5!7X&&&#=.\\\" 7V\"), peg$decode(\"<$4W\\\"\\\"5!7X0)*4W\\\"\\\"5!7X&=.\\\" 7Y\")],\n        peg$currPos = 0,\n        peg$savedPos = 0,\n        peg$posDetailsCache = [{ line: 1, column: 1 }],\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleIndices)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleIndex = peg$startRuleIndices[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n      throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n\n    function peg$decode(s) {\n      var bc = new Array(s.length),\n          i;\n\n      for (i = 0; i < s.length; i++) {\n        bc[i] = s.charCodeAt(i) - 32;\n      }\n\n      return bc;\n    }\n\n    function peg$parseRule(index) {\n      var bc = peg$bytecode[index],\n          ip = 0,\n          ips = [],\n          end = bc.length,\n          ends = [],\n          stack = [],\n          params,\n          i;\n\n      while (true) {\n        while (ip < end) {\n          switch (bc[ip]) {\n            case 0:\n              stack.push(peg$consts[bc[ip + 1]]);\n              ip += 2;\n              break;\n\n            case 1:\n              stack.push(void 0);\n              ip++;\n              break;\n\n            case 2:\n              stack.push(null);\n              ip++;\n              break;\n\n            case 3:\n              stack.push(peg$FAILED);\n              ip++;\n              break;\n\n            case 4:\n              stack.push([]);\n              ip++;\n              break;\n\n            case 5:\n              stack.push(peg$currPos);\n              ip++;\n              break;\n\n            case 6:\n              stack.pop();\n              ip++;\n              break;\n\n            case 7:\n              peg$currPos = stack.pop();\n              ip++;\n              break;\n\n            case 8:\n              stack.length -= bc[ip + 1];\n              ip += 2;\n              break;\n\n            case 9:\n              stack.splice(-2, 1);\n              ip++;\n              break;\n\n            case 10:\n              stack[stack.length - 2].push(stack.pop());\n              ip++;\n              break;\n\n            case 11:\n              stack.push(stack.splice(stack.length - bc[ip + 1], bc[ip + 1]));\n              ip += 2;\n              break;\n\n            case 12:\n              stack.push(input.substring(stack.pop(), peg$currPos));\n              ip++;\n              break;\n\n            case 13:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1]) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 14:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1] === peg$FAILED) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 15:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1] !== peg$FAILED) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 16:\n              if (stack[stack.length - 1] !== peg$FAILED) {\n                ends.push(end);\n                ips.push(ip);\n\n                end = ip + 2 + bc[ip + 1];\n                ip += 2;\n              } else {\n                ip += 2 + bc[ip + 1];\n              }\n\n              break;\n\n            case 17:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (input.length > peg$currPos) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 18:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length) === peg$consts[bc[ip + 1]]) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 19:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length).toLowerCase() === peg$consts[bc[ip + 1]]) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 20:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (peg$consts[bc[ip + 1]].test(input.charAt(peg$currPos))) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 21:\n              stack.push(input.substr(peg$currPos, bc[ip + 1]));\n              peg$currPos += bc[ip + 1];\n              ip += 2;\n              break;\n\n            case 22:\n              stack.push(peg$consts[bc[ip + 1]]);\n              peg$currPos += peg$consts[bc[ip + 1]].length;\n              ip += 2;\n              break;\n\n            case 23:\n              stack.push(peg$FAILED);\n              if (peg$silentFails === 0) {\n                peg$fail(peg$consts[bc[ip + 1]]);\n              }\n              ip += 2;\n              break;\n\n            case 24:\n              peg$savedPos = stack[stack.length - 1 - bc[ip + 1]];\n              ip += 2;\n              break;\n\n            case 25:\n              peg$savedPos = peg$currPos;\n              ip++;\n              break;\n\n            case 26:\n              params = bc.slice(ip + 4, ip + 4 + bc[ip + 3]);\n              for (i = 0; i < bc[ip + 3]; i++) {\n                params[i] = stack[stack.length - 1 - params[i]];\n              }\n\n              stack.splice(stack.length - bc[ip + 2], bc[ip + 2], peg$consts[bc[ip + 1]].apply(null, params));\n\n              ip += 4 + bc[ip + 3];\n              break;\n\n            case 27:\n              stack.push(peg$parseRule(bc[ip + 1]));\n              ip += 2;\n              break;\n\n            case 28:\n              peg$silentFails++;\n              ip++;\n              break;\n\n            case 29:\n              peg$silentFails--;\n              ip++;\n              break;\n\n            default:\n              throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");\n          }\n        }\n\n        if (ends.length > 0) {\n          end = ends.pop();\n          ip = ips.pop();\n        } else {\n          break;\n        }\n      }\n\n      return stack[0];\n    }\n\n    var outputTypes = {};\n    var inputTypes = {};\n    var nodeTypes = {};\n    var paramTypes = {};\n    var chains = [];\n    var setup = [];\n\n    function parseChain(from, to) {\n      var result = [from];\n      to.map(function (item) {\n        return result.push(item[3]);\n      });\n      return result;\n    }\n\n    function evalLambda(body) {\n      return new Function('return ' + body + ';');\n    }\n\n    peg$result = peg$parseRule(peg$startRuleIndex);\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse: peg$parse\n  };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// waver.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7aab525712c2ee639f82","import parser from './parser';\r\n\r\nexport {\r\n  parser\r\n};\r\n\r\nconst audioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\nfunction mapOutputType(type) {\r\n  if (type === 'destination') {\r\n    return AudioDestinationNode;\r\n  } else if (type === 'stream') {\r\n    return MediaStreamAudioDestinationNode;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mapInputType(type) {\r\n  if (type === 'buffer') {\r\n    return AudioBufferSourceNode;\r\n  } else if (type === 'constant') {\r\n    return ConstantSourceNode;\r\n  } else if (type === 'media') {\r\n    return MediaElementAudioSourceNode;\r\n  } else if (type === 'stream') {\r\n    return MediaStreamAudioSourceNode;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction createNode(context, type) {\r\n  const [ name, param ] = type;\r\n\r\n  if (name === 'biquadFilter') {\r\n    const result = context.createBiquadFilter();\r\n    if (param !== null) {\r\n      result.type = param;\r\n    }\r\n    return result;\r\n  } else if (name === 'delay') {\r\n    return context.createDelay(param);\r\n  } else if (name === 'compressor') {\r\n    return context.createDynamicsCompressor();\r\n  } else if (name === 'gain') {\r\n    const result = context.createGain();\r\n    if (param !== null) {\r\n      result.gain.value = param;\r\n    }\r\n    return result;\r\n  } else if (name === 'oscillator') {\r\n    const result = context.createOscillator();\r\n    if (param !== null) {\r\n      result.type = param;\r\n    }\r\n    return result;\r\n  } else if (name === 'pan') {\r\n    const result = context.createStereoPanner();\r\n    if (param !== null) {\r\n      result.pan.value = param;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function createAudioContext() {\r\n  return new audioContext();\r\n}\r\n\r\nexport function createWaver(...args) {\r\n  return new Waver(...args);\r\n}\r\n\r\nexport default class Waver {\r\n\r\n  get valid() {\r\n    return !!this._valid;\r\n  }\r\n\r\n  get outputs() {\r\n    return [ ...this._output.keys() ];\r\n  }\r\n\r\n  get inputs() {\r\n    return [ ...this._input.keys() ];\r\n  }\r\n\r\n  get params() {\r\n    return [ ...this._param.keys() ];\r\n  }\r\n\r\n  get nodes() {\r\n    return [ ...this._node.keys() ];\r\n  }\r\n\r\n  get enabled() {\r\n    return this._enabled;\r\n  }\r\n\r\n  set enabled(value) {\r\n    if (typeof value !== 'boolean') {\r\n      throw new Error('`value` is not type of Boolean!');\r\n    }\r\n    if (!this._valid) {\r\n      throw new Error('Waver is not valid!');\r\n    }\r\n\r\n    this._enabled = value;\r\n    cancelAnimationFrame(this._request);\r\n    if (value) {\r\n      this._process();\r\n    }\r\n  }\r\n\r\n  constructor(context, source) {\r\n    if (!(context instanceof audioContext)) {\r\n      throw new Error('`context` is not type of AudioContext!');\r\n    }\r\n    if (typeof source !== 'string') {\r\n      throw new Error('`source` is not type of String!');\r\n    }\r\n\r\n    const compiled = parser.parse(source);\r\n\r\n    this._context = context;\r\n    this._outputTypes = new Map();\r\n    this._inputTypes = new Map();\r\n    this._paramTypes = new Map();\r\n    this._output = new Map();\r\n    this._input = new Map();\r\n    this._node = new Map();\r\n    this._param = new Map();\r\n    this._chain = [];\r\n    this._setup = [];\r\n    this._enabled = false;\r\n    this._request = 0;\r\n\r\n    for (const key in compiled.outputTypes) {\r\n      const name = compiled.outputTypes[key];\r\n      const type = mapOutputType(name);\r\n      if (!type) {\r\n        throw new Error(`Unsupported output type: ${name}`);\r\n      }\r\n\r\n      this._outputTypes.set(key, type);\r\n      this._output.set(key, null);\r\n    }\r\n\r\n    for (const key in compiled.inputTypes) {\r\n      const name = compiled.inputTypes[key];\r\n      const type = mapInputType(name);\r\n      if (!type) {\r\n        throw new Error(`Unsupported input type: ${name}`);\r\n      }\r\n\r\n      this._inputTypes.set(key, type);\r\n      this._input.set(key, null);\r\n    }\r\n\r\n    for (const key in compiled.nodeTypes) {\r\n      const name = compiled.nodeTypes[key];\r\n      const node = createNode(context, name);\r\n      if (!node) {\r\n        throw new Error(`Unsupported node type: ${name}`);\r\n      }\r\n\r\n      this._node.set(key, node);\r\n    }\r\n\r\n    for (const key in compiled.paramTypes) {\r\n      const [ type, value ] = compiled.paramTypes[key];\r\n      if (type === 'float') {\r\n        this._paramTypes.set(key, 'number');\r\n        this._param.set(key, value || 0);\r\n      } else {\r\n        throw new Error(`Unsupported param type: ${type}`);\r\n      }\r\n    }\r\n\r\n    for (const item of compiled.chains) {\r\n      for (let i = 0, c = item.length - 1; i < c; ++i) {\r\n        this._chain.push({\r\n          from: item[i],\r\n          to: item[i + 1]\r\n        });\r\n      }\r\n    }\r\n\r\n    for (const item of compiled.setup) {\r\n      this._setup.push({\r\n        node: item[0],\r\n        param: item[1],\r\n        value: item[2]\r\n      });\r\n    }\r\n\r\n    this._valid = true;\r\n  }\r\n\r\n  dispose() {\r\n    this.enabled = false;\r\n\r\n    if (this._valid) {\r\n      this._disconnect();\r\n    }\r\n\r\n    this._context = null;\r\n    this._outputTypes = null;\r\n    this._inputTypes = null;\r\n    this._paramTypes = null;\r\n    this._output = null;\r\n    this._input = null;\r\n    this._node = null;\r\n    this._param = null;\r\n    this._chain = null;\r\n    this._setup = null;\r\n    this._valid = false;\r\n  }\r\n\r\n  bindOutput(id, value) {\r\n    if (!this._valid) {\r\n      throw new Error('Waver is not valid!');\r\n    }\r\n    if (typeof id !== 'string') {\r\n      throw new Error('`value` is not type of String!');\r\n    }\r\n\r\n    const { _outputTypes } = this;\r\n    if (!_outputTypes.has(id)) {\r\n      throw new Error(`Waver does not have output named: ${id}`);\r\n    }\r\n    if (!!value && !(value instanceof _outputTypes.get(id))) {\r\n      throw new Error(\r\n        `\\`value\\` is not type of ${_outputTypes.get(id).constructor.name}!`\r\n      );\r\n    }\r\n\r\n    this._disconnect();\r\n    this._output.set(id, value);\r\n    this._connect();\r\n  }\r\n\r\n  bindInput(id, value) {\r\n    if (!this._valid) {\r\n      throw new Error('Waver is not valid!');\r\n    }\r\n    if (typeof id !== 'string') {\r\n      throw new Error('`value` is not type of String!');\r\n    }\r\n\r\n    const { _inputTypes } = this;\r\n    if (!_inputTypes.has(id)) {\r\n      throw new Error(`Waver does not have input named: ${id}`);\r\n    }\r\n    if (!!value && !(value instanceof _inputTypes.get(id))) {\r\n      throw new Error(\r\n        `\\`value\\` is not type of ${_inputTypes.get(id).prototype.constructor.name}!`\r\n      );\r\n    }\r\n\r\n    this._disconnect();\r\n    this._input.set(id, value);\r\n    this._connect();\r\n  }\r\n\r\n  setParam(id, value) {\r\n    if (!this._valid) {\r\n      throw new Error('Waver is not valid!');\r\n    }\r\n    if (typeof id !== 'string') {\r\n      throw new Error('`value` is not type of String!');\r\n    }\r\n\r\n    const { _paramTypes } = this;\r\n    if (!_paramTypes.has(id)) {\r\n      throw new Error(`Waver does not have param named: ${id}`);\r\n    }\r\n    if (typeof value !== _paramTypes.get(id)) {\r\n      throw new Error(\r\n        `\\`value\\` is not type of ${_paramTypes.get(id)}!`\r\n      );\r\n    }\r\n\r\n    this._param.set(id, value);\r\n  }\r\n\r\n  _process() {\r\n    if (!this._valid) {\r\n      throw new Error('Waver is not valid!');\r\n    }\r\n\r\n    const { _setup, _param } = this;\r\n    for (const item of _setup) {\r\n      const { node, param, value } = item;\r\n      const n = this._findNode(node);\r\n      if (!n || !(param in n)) {\r\n        continue;\r\n      }\r\n\r\n      const v = this._getValue(value);\r\n      if ('value' in n[param]) {\r\n        n[param].value = v;\r\n      } else {\r\n        n[param] = v;\r\n      }\r\n    }\r\n\r\n    this._request = requestAnimationFrame(() => this._process());\r\n  }\r\n\r\n  _findNode(id) {\r\n    const { _output, _input, _node } = this;\r\n\r\n    if (_output.has(id)) {\r\n      return _output.get(id);\r\n    } else if (_input.has(id)) {\r\n      return _input.get(id);\r\n    } else if (_node.has(id)) {\r\n      return _node.get(id);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _getValue(value) {\r\n    const { _param } = this;\r\n\r\n    if (typeof value === 'string') {\r\n      if (!_param.has(value)) {\r\n        throw new Error(`Waver does not have param: ${value}`);\r\n      }\r\n\r\n      return _param.get(value);\r\n    } else if (value instanceof Function) {\r\n      const params = {};\r\n\r\n      for (const [k, v] of _param) {\r\n        params[k] = v;\r\n      }\r\n\r\n      return value.call(params);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  _connect() {\r\n    const { _chain } = this;\r\n\r\n    for (const item of _chain) {\r\n      const from = this._findNode(item.from);\r\n      const to = this._findNode(item.to);\r\n\r\n      if (!from || !to) {\r\n        continue;\r\n      }\r\n\r\n      from.connect(to);\r\n    }\r\n  }\r\n\r\n  _disconnect() {\r\n    const { _chain } = this;\r\n\r\n    for (const item of _chain) {\r\n      const from = this._findNode(item.from);\r\n      const to = this._findNode(item.to);\r\n\r\n      if (!from || !to) {\r\n        continue;\r\n      }\r\n\r\n      try {\r\n        from.disconnect(to);\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = /*\r\n * Generated by PEG.js 0.10.0.\r\n *\r\n * http://pegjs.org/\r\n */\r\n(function() {\r\n  \"use strict\";\r\n\r\n  function peg$subclass(child, parent) {\r\n    function ctor() { this.constructor = child; }\r\n    ctor.prototype = parent.prototype;\r\n    child.prototype = new ctor();\r\n  }\r\n\r\n  function peg$SyntaxError(message, expected, found, location) {\r\n    this.message  = message;\r\n    this.expected = expected;\r\n    this.found    = found;\r\n    this.location = location;\r\n    this.name     = \"SyntaxError\";\r\n\r\n    if (typeof Error.captureStackTrace === \"function\") {\r\n      Error.captureStackTrace(this, peg$SyntaxError);\r\n    }\r\n  }\r\n\r\n  peg$subclass(peg$SyntaxError, Error);\r\n\r\n  peg$SyntaxError.buildMessage = function(expected, found) {\r\n    var DESCRIBE_EXPECTATION_FNS = {\r\n          literal: function(expectation) {\r\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\r\n          },\r\n\r\n          \"class\": function(expectation) {\r\n            var escapedParts = \"\",\r\n                i;\r\n\r\n            for (i = 0; i < expectation.parts.length; i++) {\r\n              escapedParts += expectation.parts[i] instanceof Array\r\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\r\n                : classEscape(expectation.parts[i]);\r\n            }\r\n\r\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\r\n          },\r\n\r\n          any: function(expectation) {\r\n            return \"any character\";\r\n          },\r\n\r\n          end: function(expectation) {\r\n            return \"end of input\";\r\n          },\r\n\r\n          other: function(expectation) {\r\n            return expectation.description;\r\n          }\r\n        };\r\n\r\n    function hex(ch) {\r\n      return ch.charCodeAt(0).toString(16).toUpperCase();\r\n    }\r\n\r\n    function literalEscape(s) {\r\n      return s\r\n        .replace(/\\\\/g, '\\\\\\\\')\r\n        .replace(/\"/g,  '\\\\\"')\r\n        .replace(/\\0/g, '\\\\0')\r\n        .replace(/\\t/g, '\\\\t')\r\n        .replace(/\\n/g, '\\\\n')\r\n        .replace(/\\r/g, '\\\\r')\r\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n    }\r\n\r\n    function classEscape(s) {\r\n      return s\r\n        .replace(/\\\\/g, '\\\\\\\\')\r\n        .replace(/\\]/g, '\\\\]')\r\n        .replace(/\\^/g, '\\\\^')\r\n        .replace(/-/g,  '\\\\-')\r\n        .replace(/\\0/g, '\\\\0')\r\n        .replace(/\\t/g, '\\\\t')\r\n        .replace(/\\n/g, '\\\\n')\r\n        .replace(/\\r/g, '\\\\r')\r\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\r\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\r\n    }\r\n\r\n    function describeExpectation(expectation) {\r\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\r\n    }\r\n\r\n    function describeExpected(expected) {\r\n      var descriptions = new Array(expected.length),\r\n          i, j;\r\n\r\n      for (i = 0; i < expected.length; i++) {\r\n        descriptions[i] = describeExpectation(expected[i]);\r\n      }\r\n\r\n      descriptions.sort();\r\n\r\n      if (descriptions.length > 0) {\r\n        for (i = 1, j = 1; i < descriptions.length; i++) {\r\n          if (descriptions[i - 1] !== descriptions[i]) {\r\n            descriptions[j] = descriptions[i];\r\n            j++;\r\n          }\r\n        }\r\n        descriptions.length = j;\r\n      }\r\n\r\n      switch (descriptions.length) {\r\n        case 1:\r\n          return descriptions[0];\r\n\r\n        case 2:\r\n          return descriptions[0] + \" or \" + descriptions[1];\r\n\r\n        default:\r\n          return descriptions.slice(0, -1).join(\", \")\r\n            + \", or \"\r\n            + descriptions[descriptions.length - 1];\r\n      }\r\n    }\r\n\r\n    function describeFound(found) {\r\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\r\n    }\r\n\r\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\r\n  };\r\n\r\n  function peg$parse(input, options) {\r\n    options = options !== void 0 ? options : {};\r\n\r\n    var peg$FAILED = {},\r\n\r\n        peg$startRuleIndices = { Program: 0 },\r\n        peg$startRuleIndex   = 0,\r\n\r\n        peg$consts = [\r\n          function() { return {\r\n              outputTypes,\r\n              inputTypes,\r\n              nodeTypes,\r\n              paramTypes,\r\n              chains,\r\n              setup\r\n            } },\r\n          function(from, to) { chains.push(parseChain(from, to)); },\r\n          \".\",\r\n          peg$literalExpectation(\".\", false),\r\n          \"=\",\r\n          peg$literalExpectation(\"=\", false),\r\n          function(node, param, value) { setup.push([ node, param, value ]) },\r\n          peg$otherExpectation(\"output\"),\r\n          function(type, id) { outputTypes[id] = type; },\r\n          peg$otherExpectation(\"input\"),\r\n          function(type, id) { inputTypes[id] = type; },\r\n          peg$otherExpectation(\"node\"),\r\n          \"(\",\r\n          peg$literalExpectation(\"(\", false),\r\n          \")\",\r\n          peg$literalExpectation(\")\", false),\r\n          function(type, id, param) { nodeTypes[id] = [ type, param && param[3] ]; },\r\n          peg$otherExpectation(\"param\"),\r\n          function(type, id, param) { paramTypes[id] = [ type, param && param[3] ]; },\r\n          \"output\",\r\n          peg$literalExpectation(\"output\", false),\r\n          \"input\",\r\n          peg$literalExpectation(\"input\", false),\r\n          \"node\",\r\n          peg$literalExpectation(\"node\", false),\r\n          \"param\",\r\n          peg$literalExpectation(\"param\", false),\r\n          peg$otherExpectation(\"value\"),\r\n          peg$otherExpectation(\"identifier\"),\r\n          /^[_a-zA-Z]/,\r\n          peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\r\n          /^[_a-zA-Z0-9]/,\r\n          peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\r\n          function() { return text(); },\r\n          peg$otherExpectation(\"float\"),\r\n          \"-\",\r\n          peg$literalExpectation(\"-\", false),\r\n          /^[0-9]/,\r\n          peg$classExpectation([[\"0\", \"9\"]], false, false),\r\n          function() { return parseFloat(text()); },\r\n          peg$otherExpectation(\"lambda\"),\r\n          \"{\",\r\n          peg$literalExpectation(\"{\", false),\r\n          \"}\",\r\n          peg$literalExpectation(\"}\", false),\r\n          function(contents) { return evalLambda(contents.trim()); },\r\n          /^[^\"}\"]/,\r\n          peg$classExpectation([\"\\\"\", \"}\", \"\\\"\"], true, false),\r\n          peg$otherExpectation(\"connect\"),\r\n          \"=>\",\r\n          peg$literalExpectation(\"=>\", false),\r\n          peg$otherExpectation(\"semicolon\"),\r\n          \";\",\r\n          peg$literalExpectation(\";\", false),\r\n          peg$otherExpectation(\"whitespace\"),\r\n          /^[ \\t\\n\\r]/,\r\n          peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\r\n          peg$otherExpectation(\"whitespace_any\")\r\n        ],\r\n\r\n        peg$bytecode = [\r\n          peg$decode(\"%$;!0#*;!&/& 8!: ! )\"),\r\n          peg$decode(\"%;6/G#;%./ &;\\\".) &;#.# &;$/,$;6/#$+#)(#'#(\\\"'#&'#\"),\r\n          peg$decode(\"%;//\\x9B#$%;6/>#;3/5$;6/,$;//#$+$)($'#(#'#(\\\"'#&'#/K#0H*%;6/>#;3/5$;6/,$;//#$+$)($'#(#'#(\\\"'#&'#&&&#/;$;6/2$;4/)$8$:!$\\\"#\\\")($'#(#'#(\\\"'#&'#\"),\r\n          peg$decode(\"%;//\\x90#;6/\\x87$2\\\"\\\"\\\"6\\\"7#/x$;6/o$;//f$;6/]$2$\\\"\\\"6$7%/N$;6/E$;./<$;6/3$;4/*$8+:&+#*&\\\")(+'#(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\\\"'#&'#\"),\r\n          peg$decode(\"%;//f#;6/]$2\\\"\\\"\\\"6\\\"7#/N$;6/E$;//<$;6/3$;1/*$8':&'#&\\\" )(''#(&'#(%'#($'#(#'#(\\\"'#&'#\"),\r\n          peg$decode(\"%;&./ &;'.) &;(.# &;)/5#;6/,$;4/#$+#)(#'#(\\\"'#&'#\"),\r\n          peg$decode(\"<%;*/M#;5/D$;//;$;5/2$;//)$8%:(%\\\"\\\" )(%'#($'#(#'#(\\\"'#&'#=.\\\" 7'\"),\r\n          peg$decode(\"<%;+/M#;5/D$;//;$;5/2$;//)$8%:*%\\\"\\\" )(%'#($'#(#'#(\\\"'#&'#=.\\\" 7)\"),\r\n          peg$decode(\"<%;,/\\x9F#;5/\\x96$;//\\x8D$;5/\\x84$;//{$%;6/\\\\#2,\\\"\\\"6,7-/M$;6/D$;./;$;6/2$2.\\\"\\\"6.7//#$+&)(&'#(%'#($'#(#'#(\\\"'#&'#.\\\" &\\\"/*$8&:0&##! )(&'#(%'#($'#(#'#(\\\"'#&'#=.\\\" 7+\"),\r\n          peg$decode(\"<%;-/\\x9F#;5/\\x96$;//\\x8D$;5/\\x84$;//{$%;6/\\\\#2,\\\"\\\"6,7-/M$;6/D$;./;$;6/2$2.\\\"\\\"6.7//#$+&)(&'#(%'#($'#(#'#(\\\"'#&'#.\\\" &\\\"/*$8&:2&##! )(&'#(%'#($'#(#'#(\\\"'#&'#=.\\\" 71\"),\r\n          peg$decode(\"23\\\"\\\"6374\"),\r\n          peg$decode(\"25\\\"\\\"6576\"),\r\n          peg$decode(\"27\\\"\\\"6778\"),\r\n          peg$decode(\"29\\\"\\\"697:\"),\r\n          peg$decode(\"<;0.# &;/=.\\\" 7;\"),\r\n          peg$decode(\"<%;6/R#4=\\\"\\\"5!7>/C$$4?\\\"\\\"5!7@0)*4?\\\"\\\"5!7@&/'$8#:A# )(#'#(\\\"'#&'#=.\\\" 7<\"),\r\n          peg$decode(\"<%;6/\\x9D#2C\\\"\\\"6C7D.\\\" &\\\"/\\x89$$4E\\\"\\\"5!7F/,#0)*4E\\\"\\\"5!7F&&&#/g$%2\\\"\\\"\\\"6\\\"7#/E#$4E\\\"\\\"5!7F/,#0)*4E\\\"\\\"5!7F&&&#/#$+\\\")(\\\"'#&'#.\\\" &\\\"/'$8$:G$ )($'#(#'#(\\\"'#&'#=.\\\" 7B\"),\r\n          peg$decode(\"<%;6/O#2I\\\"\\\"6I7J/@$;2/7$2K\\\"\\\"6K7L/($8$:M$!!)($'#(#'#(\\\"'#&'#=.\\\" 7H\"),\r\n          peg$decode(\"%$4N\\\"\\\"5!7O0)*4N\\\"\\\"5!7O&/& 8!:A! )\"),\r\n          peg$decode(\"<%;6/;#2Q\\\"\\\"6Q7R/,$;6/#$+#)(#'#(\\\"'#&'#=.\\\" 7P\"),\r\n          peg$decode(\"<%;6/k#$%2T\\\"\\\"6T7U/,#;6/#$+\\\")(\\\"'#&'#/?#0<*%2T\\\"\\\"6T7U/,#;6/#$+\\\")(\\\"'#&'#&&&#/#$+\\\")(\\\"'#&'#=.\\\" 7S\"),\r\n          peg$decode(\"<$4W\\\"\\\"5!7X/,#0)*4W\\\"\\\"5!7X&&&#=.\\\" 7V\"),\r\n          peg$decode(\"<$4W\\\"\\\"5!7X0)*4W\\\"\\\"5!7X&=.\\\" 7Y\")\r\n        ],\r\n\r\n        peg$currPos          = 0,\r\n        peg$savedPos         = 0,\r\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\r\n        peg$maxFailPos       = 0,\r\n        peg$maxFailExpected  = [],\r\n        peg$silentFails      = 0,\r\n\r\n        peg$result;\r\n\r\n    if (\"startRule\" in options) {\r\n      if (!(options.startRule in peg$startRuleIndices)) {\r\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n      }\r\n\r\n      peg$startRuleIndex = peg$startRuleIndices[options.startRule];\r\n    }\r\n\r\n    function text() {\r\n      return input.substring(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function location() {\r\n      return peg$computeLocation(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function expected(description, location) {\r\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n      throw peg$buildStructuredError(\r\n        [peg$otherExpectation(description)],\r\n        input.substring(peg$savedPos, peg$currPos),\r\n        location\r\n      );\r\n    }\r\n\r\n    function error(message, location) {\r\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\r\n\r\n      throw peg$buildSimpleError(message, location);\r\n    }\r\n\r\n    function peg$literalExpectation(text, ignoreCase) {\r\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\r\n    }\r\n\r\n    function peg$classExpectation(parts, inverted, ignoreCase) {\r\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\r\n    }\r\n\r\n    function peg$anyExpectation() {\r\n      return { type: \"any\" };\r\n    }\r\n\r\n    function peg$endExpectation() {\r\n      return { type: \"end\" };\r\n    }\r\n\r\n    function peg$otherExpectation(description) {\r\n      return { type: \"other\", description: description };\r\n    }\r\n\r\n    function peg$computePosDetails(pos) {\r\n      var details = peg$posDetailsCache[pos], p;\r\n\r\n      if (details) {\r\n        return details;\r\n      } else {\r\n        p = pos - 1;\r\n        while (!peg$posDetailsCache[p]) {\r\n          p--;\r\n        }\r\n\r\n        details = peg$posDetailsCache[p];\r\n        details = {\r\n          line:   details.line,\r\n          column: details.column\r\n        };\r\n\r\n        while (p < pos) {\r\n          if (input.charCodeAt(p) === 10) {\r\n            details.line++;\r\n            details.column = 1;\r\n          } else {\r\n            details.column++;\r\n          }\r\n\r\n          p++;\r\n        }\r\n\r\n        peg$posDetailsCache[pos] = details;\r\n        return details;\r\n      }\r\n    }\r\n\r\n    function peg$computeLocation(startPos, endPos) {\r\n      var startPosDetails = peg$computePosDetails(startPos),\r\n          endPosDetails   = peg$computePosDetails(endPos);\r\n\r\n      return {\r\n        start: {\r\n          offset: startPos,\r\n          line:   startPosDetails.line,\r\n          column: startPosDetails.column\r\n        },\r\n        end: {\r\n          offset: endPos,\r\n          line:   endPosDetails.line,\r\n          column: endPosDetails.column\r\n        }\r\n      };\r\n    }\r\n\r\n    function peg$fail(expected) {\r\n      if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n      if (peg$currPos > peg$maxFailPos) {\r\n        peg$maxFailPos = peg$currPos;\r\n        peg$maxFailExpected = [];\r\n      }\r\n\r\n      peg$maxFailExpected.push(expected);\r\n    }\r\n\r\n    function peg$buildSimpleError(message, location) {\r\n      return new peg$SyntaxError(message, null, null, location);\r\n    }\r\n\r\n    function peg$buildStructuredError(expected, found, location) {\r\n      return new peg$SyntaxError(\r\n        peg$SyntaxError.buildMessage(expected, found),\r\n        expected,\r\n        found,\r\n        location\r\n      );\r\n    }\r\n\r\n    function peg$decode(s) {\r\n      var bc = new Array(s.length), i;\r\n\r\n      for (i = 0; i < s.length; i++) {\r\n        bc[i] = s.charCodeAt(i) - 32;\r\n      }\r\n\r\n      return bc;\r\n    }\r\n\r\n    function peg$parseRule(index) {\r\n      var bc    = peg$bytecode[index],\r\n          ip    = 0,\r\n          ips   = [],\r\n          end   = bc.length,\r\n          ends  = [],\r\n          stack = [],\r\n          params, i;\r\n\r\n      while (true) {\r\n        while (ip < end) {\r\n          switch (bc[ip]) {\r\n            case 0:\r\n              stack.push(peg$consts[bc[ip + 1]]);\r\n              ip += 2;\r\n              break;\r\n\r\n            case 1:\r\n              stack.push(void 0);\r\n              ip++;\r\n              break;\r\n\r\n            case 2:\r\n              stack.push(null);\r\n              ip++;\r\n              break;\r\n\r\n            case 3:\r\n              stack.push(peg$FAILED);\r\n              ip++;\r\n              break;\r\n\r\n            case 4:\r\n              stack.push([]);\r\n              ip++;\r\n              break;\r\n\r\n            case 5:\r\n              stack.push(peg$currPos);\r\n              ip++;\r\n              break;\r\n\r\n            case 6:\r\n              stack.pop();\r\n              ip++;\r\n              break;\r\n\r\n            case 7:\r\n              peg$currPos = stack.pop();\r\n              ip++;\r\n              break;\r\n\r\n            case 8:\r\n              stack.length -= bc[ip + 1];\r\n              ip += 2;\r\n              break;\r\n\r\n            case 9:\r\n              stack.splice(-2, 1);\r\n              ip++;\r\n              break;\r\n\r\n            case 10:\r\n              stack[stack.length - 2].push(stack.pop());\r\n              ip++;\r\n              break;\r\n\r\n            case 11:\r\n              stack.push(stack.splice(stack.length - bc[ip + 1], bc[ip + 1]));\r\n              ip += 2;\r\n              break;\r\n\r\n            case 12:\r\n              stack.push(input.substring(stack.pop(), peg$currPos));\r\n              ip++;\r\n              break;\r\n\r\n            case 13:\r\n              ends.push(end);\r\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\r\n\r\n              if (stack[stack.length - 1]) {\r\n                end = ip + 3 + bc[ip + 1];\r\n                ip += 3;\r\n              } else {\r\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\r\n                ip += 3 + bc[ip + 1];\r\n              }\r\n\r\n              break;\r\n\r\n            case 14:\r\n              ends.push(end);\r\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\r\n\r\n              if (stack[stack.length - 1] === peg$FAILED) {\r\n                end = ip + 3 + bc[ip + 1];\r\n                ip += 3;\r\n              } else {\r\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\r\n                ip += 3 + bc[ip + 1];\r\n              }\r\n\r\n              break;\r\n\r\n            case 15:\r\n              ends.push(end);\r\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\r\n\r\n              if (stack[stack.length - 1] !== peg$FAILED) {\r\n                end = ip + 3 + bc[ip + 1];\r\n                ip += 3;\r\n              } else {\r\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\r\n                ip += 3 + bc[ip + 1];\r\n              }\r\n\r\n              break;\r\n\r\n            case 16:\r\n              if (stack[stack.length - 1] !== peg$FAILED) {\r\n                ends.push(end);\r\n                ips.push(ip);\r\n\r\n                end = ip + 2 + bc[ip + 1];\r\n                ip += 2;\r\n              } else {\r\n                ip += 2 + bc[ip + 1];\r\n              }\r\n\r\n              break;\r\n\r\n            case 17:\r\n              ends.push(end);\r\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\r\n\r\n              if (input.length > peg$currPos) {\r\n                end = ip + 3 + bc[ip + 1];\r\n                ip += 3;\r\n              } else {\r\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\r\n                ip += 3 + bc[ip + 1];\r\n              }\r\n\r\n              break;\r\n\r\n            case 18:\r\n              ends.push(end);\r\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\r\n\r\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length) === peg$consts[bc[ip + 1]]) {\r\n                end = ip + 4 + bc[ip + 2];\r\n                ip += 4;\r\n              } else {\r\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\r\n                ip += 4 + bc[ip + 2];\r\n              }\r\n\r\n              break;\r\n\r\n            case 19:\r\n              ends.push(end);\r\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\r\n\r\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length).toLowerCase() === peg$consts[bc[ip + 1]]) {\r\n                end = ip + 4 + bc[ip + 2];\r\n                ip += 4;\r\n              } else {\r\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\r\n                ip += 4 + bc[ip + 2];\r\n              }\r\n\r\n              break;\r\n\r\n            case 20:\r\n              ends.push(end);\r\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\r\n\r\n              if (peg$consts[bc[ip + 1]].test(input.charAt(peg$currPos))) {\r\n                end = ip + 4 + bc[ip + 2];\r\n                ip += 4;\r\n              } else {\r\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\r\n                ip += 4 + bc[ip + 2];\r\n              }\r\n\r\n              break;\r\n\r\n            case 21:\r\n              stack.push(input.substr(peg$currPos, bc[ip + 1]));\r\n              peg$currPos += bc[ip + 1];\r\n              ip += 2;\r\n              break;\r\n\r\n            case 22:\r\n              stack.push(peg$consts[bc[ip + 1]]);\r\n              peg$currPos += peg$consts[bc[ip + 1]].length;\r\n              ip += 2;\r\n              break;\r\n\r\n            case 23:\r\n              stack.push(peg$FAILED);\r\n              if (peg$silentFails === 0) {\r\n                peg$fail(peg$consts[bc[ip + 1]]);\r\n              }\r\n              ip += 2;\r\n              break;\r\n\r\n            case 24:\r\n              peg$savedPos = stack[stack.length - 1 - bc[ip + 1]];\r\n              ip += 2;\r\n              break;\r\n\r\n            case 25:\r\n              peg$savedPos = peg$currPos;\r\n              ip++;\r\n              break;\r\n\r\n            case 26:\r\n              params = bc.slice(ip + 4, ip + 4 + bc[ip + 3]);\r\n              for (i = 0; i < bc[ip + 3]; i++) {\r\n                params[i] = stack[stack.length - 1 - params[i]];\r\n              }\r\n\r\n              stack.splice(\r\n                stack.length - bc[ip + 2],\r\n                bc[ip + 2],\r\n                peg$consts[bc[ip + 1]].apply(null, params)\r\n              );\r\n\r\n              ip += 4 + bc[ip + 3];\r\n              break;\r\n\r\n            case 27:\r\n              stack.push(peg$parseRule(bc[ip + 1]));\r\n              ip += 2;\r\n              break;\r\n\r\n            case 28:\r\n              peg$silentFails++;\r\n              ip++;\r\n              break;\r\n\r\n            case 29:\r\n              peg$silentFails--;\r\n              ip++;\r\n              break;\r\n\r\n            default:\r\n              throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");\r\n          }\r\n        }\r\n\r\n        if (ends.length > 0) {\r\n          end = ends.pop();\r\n          ip = ips.pop();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return stack[0];\r\n    }\r\n\r\n\r\n      const outputTypes = {};\r\n      const inputTypes = {};\r\n      const nodeTypes = {};\r\n      const paramTypes = {};\r\n      const chains = [];\r\n      const setup = [];\r\n\r\n      function parseChain(from, to) {\r\n          const result = [ from ];\r\n          to.map(item => result.push(item[3]))\r\n          return result;\r\n      }\r\n\r\n      function evalLambda(body) {\r\n      \treturn new Function('return ' + body + ';');\r\n      }\r\n\r\n\r\n    peg$result = peg$parseRule(peg$startRuleIndex);\r\n\r\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n      return peg$result;\r\n    } else {\r\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n        peg$fail(peg$endExpectation());\r\n      }\r\n\r\n      throw peg$buildStructuredError(\r\n        peg$maxFailExpected,\r\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\r\n        peg$maxFailPos < input.length\r\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    SyntaxError: peg$SyntaxError,\r\n    parse:       peg$parse\r\n  };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js"],"sourceRoot":""}